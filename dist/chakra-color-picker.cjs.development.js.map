{"version":3,"file":"chakra-color-picker.cjs.development.js","sources":["../src/colorPicker.tsx"],"sourcesContent":["import {\n  Button,\n  Popover,\n  PopoverArrow,\n  PopoverContent,\n  PopoverTrigger,\n  SimpleGrid,\n  useBoolean,\n  PlacementWithLogical,\n  ButtonProps,\n} from \"@chakra-ui/react\";\nimport React, { useEffect, useState } from \"react\";\n\nconst defaultColors = [\n  \"gray.500\",\n  \"red.500\",\n  \"orange.500\",\n  \"yellow.500\",\n  \"green.500\",\n  \"teal.500\",\n  \"blue.500\",\n  \"cyan.500\",\n  \"purple.500\",\n  \"pink.500\",\n];\n\nexport const ColorPicker = ({\n  onChange,\n  colors,\n  defaultColor,\n  color,\n  pickerBg,\n  placement,\n  isDisabled,\n  ...props\n}: ColorPickerProps) => {\n  const [isOpen, setIsOpen] = useBoolean();\n  const colorPalette = colors || defaultColors;\n  const [selectedColor, setSelectedColor] = useState<string>(defaultColor || colorPalette[0]);\n\n  useEffect(() => {\n    if (color) {\n      setSelectedColor(color);\n    }\n  }, [color]);\n\n  return (\n    <Popover\n      isOpen={isOpen && !isDisabled}\n      onClose={setIsOpen.toggle}\n      placement={placement}\n    >\n      <PopoverTrigger>\n        <Button\n          bg={selectedColor}\n          onClick={setIsOpen.toggle}\n          _hover={{ bg: selectedColor, transform: \"scale(1.05)\", borderColor: \"gray.300\" }}\n          _active={{ bg: selectedColor }}\n          aria-label=\"color picker\"\n          isDisabled={isDisabled}\n          borderWidth={1}\n          borderColor=\"gray.200\"\n          {...props}\n        ></Button>\n      </PopoverTrigger>\n      <PopoverContent w=\"auto\" bg={pickerBg} boxShadow=\"md\">\n        <PopoverArrow />\n        <SimpleGrid columns={5} p={1} spacing={1}>\n          {colorPalette.map((color, index) => (\n            <Button\n              key={`color-picker-${color}-${index}`}\n              h=\"40px\"\n              w=\"40px\"\n              p={0}\n              minW=\"40px\"\n              bg={color}\n              borderWidth={1}\n              borderColor=\"gray.200\"\n              _hover={{ bg: color, transform: \"scale(1.05)\", borderColor: \"gray.300\" }}\n              _active={{ bg: color }}\n              onClick={() => {\n                setIsOpen.toggle();\n                setSelectedColor(color);\n                onChange(color);\n              }}\n            />\n          ))}\n        </SimpleGrid>\n      </PopoverContent>\n    </Popover>\n  );\n};\n\ninterface ColorPickerProps extends Omit<ButtonProps, 'onChange'> {\n  onChange: (value: string) => void;\n  colors?: string[];\n  defaultColor?: string;\n  color?: string;\n  pickerBg?: string;\n  placement?: PlacementWithLogical;\n  isDisabled?: boolean;\n}\n"],"names":["defaultColors","ColorPicker","onChange","colors","defaultColor","color","pickerBg","placement","isDisabled","props","useBoolean","isOpen","setIsOpen","colorPalette","useState","selectedColor","setSelectedColor","useEffect","React","Popover","onClose","toggle","PopoverTrigger","Button","bg","onClick","_hover","transform","borderColor","_active","borderWidth","PopoverContent","w","boxShadow","PopoverArrow","SimpleGrid","columns","p","spacing","map","index","key","h","minW"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAaA,IAAMA,aAAa,GAAG,CACpB,UADoB,EAEpB,SAFoB,EAGpB,YAHoB,EAIpB,YAJoB,EAKpB,WALoB,EAMpB,UANoB,EAOpB,UAPoB,EAQpB,UARoB,EASpB,YAToB,EAUpB,UAVoB,CAAtB;IAaaC,WAAW,GAAG,SAAdA,WAAc;MACzBC,gBAAAA;MACAC,cAAAA;MACAC,oBAAAA;MACAC,aAAAA;MACAC,gBAAAA;MACAC,iBAAAA;MACAC,kBAAAA;MACGC;;AAEH,oBAA4BC,gBAAU,EAAtC;AAAA,MAAOC,MAAP;AAAA,MAAeC,SAAf;;AACA,MAAMC,YAAY,GAAGV,MAAM,IAAIH,aAA/B;;AACA,kBAA0Cc,cAAQ,CAASV,YAAY,IAAIS,YAAY,CAAC,CAAD,CAArC,CAAlD;AAAA,MAAOE,aAAP;AAAA,MAAsBC,gBAAtB;;AAEAC,EAAAA,eAAS,CAAC;AACR,QAAIZ,KAAJ,EAAW;AACTW,MAAAA,gBAAgB,CAACX,KAAD,CAAhB;AACD;AACF,GAJQ,EAIN,CAACA,KAAD,CAJM,CAAT;AAMA,SACEa,4BAAA,CAACC,aAAD;AACER,IAAAA,MAAM,EAAEA,MAAM,IAAI,CAACH;AACnBY,IAAAA,OAAO,EAAER,SAAS,CAACS;AACnBd,IAAAA,SAAS,EAAEA;GAHb,EAKEW,4BAAA,CAACI,oBAAD,MAAA,EACEJ,4BAAA,CAACK,YAAD;AACEC,IAAAA,EAAE,EAAET;AACJU,IAAAA,OAAO,EAAEb,SAAS,CAACS;AACnBK,IAAAA,MAAM,EAAE;AAAEF,MAAAA,EAAE,EAAET,aAAN;AAAqBY,MAAAA,SAAS,EAAE,aAAhC;AAA+CC,MAAAA,WAAW,EAAE;AAA5D;AACRC,IAAAA,OAAO,EAAE;AAAEL,MAAAA,EAAE,EAAET;AAAN;kBACE;AACXP,IAAAA,UAAU,EAAEA;AACZsB,IAAAA,WAAW,EAAE;AACbF,IAAAA,WAAW,EAAC;KACRnB,MATN,CADF,CALF,EAkBES,4BAAA,CAACa,oBAAD;AAAgBC,IAAAA,CAAC,EAAC;AAAOR,IAAAA,EAAE,EAAElB;AAAU2B,IAAAA,SAAS,EAAC;GAAjD,EACEf,4BAAA,CAACgB,kBAAD,MAAA,CADF,EAEEhB,4BAAA,CAACiB,gBAAD;AAAYC,IAAAA,OAAO,EAAE;AAAGC,IAAAA,CAAC,EAAE;AAAGC,IAAAA,OAAO,EAAE;GAAvC,EACGzB,YAAY,CAAC0B,GAAb,CAAiB,UAAClC,KAAD,EAAQmC,KAAR;AAAA,WAChBtB,4BAAA,CAACK,YAAD;AACEkB,MAAAA,GAAG,oBAAkBpC,KAAlB,SAA2BmC;AAC9BE,MAAAA,CAAC,EAAC;AACFV,MAAAA,CAAC,EAAC;AACFK,MAAAA,CAAC,EAAE;AACHM,MAAAA,IAAI,EAAC;AACLnB,MAAAA,EAAE,EAAEnB;AACJyB,MAAAA,WAAW,EAAE;AACbF,MAAAA,WAAW,EAAC;AACZF,MAAAA,MAAM,EAAE;AAAEF,QAAAA,EAAE,EAAEnB,KAAN;AAAasB,QAAAA,SAAS,EAAE,aAAxB;AAAuCC,QAAAA,WAAW,EAAE;AAApD;AACRC,MAAAA,OAAO,EAAE;AAAEL,QAAAA,EAAE,EAAEnB;AAAN;AACToB,MAAAA,OAAO,EAAE;AACPb,QAAAA,SAAS,CAACS,MAAV;AACAL,QAAAA,gBAAgB,CAACX,KAAD,CAAhB;AACAH,QAAAA,QAAQ,CAACG,KAAD,CAAR;AACD;KAfH,CADgB;AAAA,GAAjB,CADH,CAFF,CAlBF,CADF;AA6CD;;;;"}